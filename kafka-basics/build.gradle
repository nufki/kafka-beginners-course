plugins {
    id 'java'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.3.0'
}

group = 'io.conductor.demos'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.8.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.13'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation 'org.slf4j:slf4j-simple:2.0.13' // For simple logging

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    // https://mvnrepository.com/artifact/io.confluent/kafka-json-schema-serializer
    //implementation 'io.confluent:kafka-json-schema-serializer:7.7.0'
    implementation 'io.confluent:kafka-json-schema-serializer:7.4.0'

    // https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
    implementation 'io.confluent:kafka-avro-serializer:7.7.0'

    // https://mvnrepository.com/artifact/org.apache.avro/avro-maven-plugin
    implementation 'org.apache.avro:avro-maven-plugin:1.12.0'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


task generateAvro(type: com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro/Payment.avsc")
    outputDir = file("${project.buildDir}/generated")
}

//  Declaring custom source directories additively
sourceSets {
    main {
        java {
            srcDirs "$buildDir/generated/avro"
        }
    }
}

compileJava.dependsOn generateAvro

test {
    useJUnitPlatform()
}